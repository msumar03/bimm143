---
title: "Class 05: Data Visualization with GGPLOT"
author: "Mehek (A16868697)"
format: gfm
---

## Plotting in R

R has lot's of ways to make plots and figures. This includes so-called **base** graphics and packages like **ggplot2**

```{r}
plot(cars) 
```


This is a **base** R plot of the in-built `cars` dataset that has only two columns:

```{r}
head(cars)
```


> Q. How would we plot this wee dataset with **ggplot2**?

All ggplot figures have at least 3 layers:

-data
-aes (how the data map to the plot)
-geoms (how we draw the plot, lines, points, etc.)

before I use any new package I need to download and install it with the `install.packages()` command. 

I never use `install.packages()` within my quarto document otherwise I will install the package over and over and over again - which is silly!

Once a package is installed I can load it up with the `library()` function. 
```{r}
# install.packages("ggplot2")
library(ggplot2)

ggplot(cars) + 
  aes(x=speed, y=dist) + 
  geom_point()

```


**Key-point**: For simple plots (like the one above) ggplot is more verbose (we need to do more typing) but as plots get more complicated ggplot starts to be more clear and simple than base R plot()

```{r}
p <- ggplot(cars) +
  aes(speed, dist) +
  geom_point() + 
  geom_smooth(method="lm", se=FALSE) +
  labs(title="Stopping distance of old cars",
       subtitle="From the in-built cars dataset") +
  theme_bw()
```



```{r}
p
```


```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

```{r}
nrow(genes)
```
```{r}
colnames(genes)
```
```{r}
table(genes$State)
round( table(genes$State)/nrow(genes) * 100,2)
```


```{r}
p <- ggplot(genes) + 
  aes(x=Condition1, y=Condition2, col=State) +
  geom_point()
p
```

```{r}
p + theme_bw() +
  scale_colour_manual( values=c("blue","gray","red") ) + 
  labs(title="Gene Expression Changes Upon Drug Treatment", 
       x="Control (no drug) ", 
       y="Drug Treatment")
  
```

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"
gapminder <- read.delim(url)
```

```{r}
# install.packages("dplyr")
library(dplyr)
gapminder_2007 <- gapminder %>% filter(year==2007)
```
```{r}
library(ggplot2)
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, size=pop) +
  geom_point(alpha=0.5) + 
  scale_size_area(max_size = 10)
```

```{r}
gapminder_1957 <- gapminder %>% filter (year==1957 | year==2007)

ggplot(gapminder_1957) + 
  aes(x = gdpPercap, y = lifeExp, color=continent, 
                size = pop) + 
  geom_point(alpha=0.7) +
  scale_size_area(max_size=10) + 
  facet_wrap(~year)
```

```{r}
gapminder_top5 <- gapminder %>% 
  filter(year==2007) %>% 
  arrange(desc(pop)) %>% 
  top_n(5, pop)

gapminder_top5
```

> Q. What was the population of Ireland in the last year we have data for?

```{r}
filter(gapminder, country=="Ireland", 
       year==2007)
```
>Q. What countries in data set had pop smaller than Ireland in 2007?

-First limit/subset the dataset to the year 2007
-Then find the  `pop` value for Ireland
-Then extract all rows with `pop` less than Ireland's

```{r}
gap07 <- filter(gapminder, year==2007)
gap07
```
```{r}
ire_pop <- filter(gap07, country=="Ireland")["pop"]
ire_pop
```


```{r}
ggplot(gapminder_top5) + 
  aes(x =reorder (country, -pop), y = pop, fill = country) + 
     geom_col(col="gray30") + 
     guides(fill="none")
```

```{r}
head(USArrests)
```
```{r}
USArrests$State <- rownames(USArrests)
ggplot (USArrests) + 
  aes (x=reorder(State,Murder), y=Murder) + 
  geom_point() +
  geom_segment(aes(x= State,
                   xend=State,
                   y=0,
                   yend=Murder), color="blue") +
  coord_flip()
```


```{r}
library(patchwork)
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p3 <- ggplot(mtcars) + geom_smooth(aes(disp, qsec))
p4 <- ggplot(mtcars) + geom_bar(aes(carb))
(p1 | p2 | p3) /
      p4
```

```{r}
#| eval: false
library(gapminder)
library(gganimate)
ggplot (gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
  geom_point(alpha = 0.7, show.legend = FALSE) +
  scale_colour_manual(values = country_colors) +
  scale_size(range = c(2, 12)) +
  scale_x_log10() +
  facet_wrap(~continent) + 
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  transition_time(year) +
  shadow_wake(wake_length = 0.1, alpha = FALSE)
```